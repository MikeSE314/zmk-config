/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT  0
#define L_NAV    1
#define L_MEDIA  2
#define L_SYMBOL 3
#define L_NUMBER 4

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//                        GACS SCAG
// HOMEROW/BELOW MODS FOR zxcv m,./
//
// (media|delete) (nav|space)
//
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | DEL | SPC | LWR |   | ENT | RSE  | ALT |
                        bindings = <
    &kp TAB     &kp Q           &kp W           &kp E           &kp R           &kp T       &kp Y   &kp U           &kp I               &kp O           &kp P               &kp BSPC
    &kp LCTRL   &kp A           &kp S           &kp D           &kp F           &kp G       &kp H   &kp J           &kp K               &kp L           &kp SEMI            &kp SQT
    &kp LSHFT   &ht_tp LGUI Z   &ht_tp LALT X   &ht_tp LCTL C   &ht_tp LSHFT V  &kp B       &kp N   &ht_tp RSHFT M  &ht_tp RCTL COMMA   &ht_tp RALT DOT &ht_tp RGUI FSLH    &kp ESC

                                &lt L_NUM DEL   &lt L_NAV SPACE &kp TAB     &kp RET &lt L_SYMBOL BSPC   &lt L_MEDIA RET
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB      &kp N1          &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans       &trans          &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                media_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
// |     |     |     |     |     |     ||     |     |     |     |     |     |
//                   |     |     |     ||     |     |     |
                        bindings = <
    &bootloader &trans  &trans  &trans  &trans      &trans  &trans          &trans              &trans  &bootloader
    &trans      &trans  &trans  &trans  &trans      &trans  &kp C_VOLUME_UP &kp C_VOLUME_DOWN   &trans  &trans
    &trans      &trans  &trans  &trans  &trans      &trans  &trans          &trans              &trans  &trans
                        &trans  &trans  &trans      &trans  &trans  &trans
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// +below-home-row mods
//
// |  `  |  -  |  =  |  [  |  ]  |  ;  ||     |     |     |     |     |     |
// |  \  |  &  |  *  |  (  |  )  |  ^  ||     |     |     |     |     |     |
// |     |  !  |  @  |  #  |  $  |  %  ||     |     |     |     |     |     |
//                   |     |     |     ||     |     |     |
                        bindings = <
    &kp GRAVE   &kp MINUS           &kp EQUAL           &kp LBKT            &kp RBKT            &kp SEMICOLON       &trans  &trans      &trans      &trans      &trans      &trans
    &kp BSLH    &kp AMPS            &kp KP_ASTERISK     &kp LPAR            &kp RPAR            &kp CARET           &trans  &trans      &trans      &trans      &trans      &trans
    &trans      &ht_tp LGUI EXCL    &ht_tp LALT AT_SIGN &ht_tp LCTL HASH    &ht_tp LSHFT DOLLAR &kp PERCENT         &trans  &kp RSHFT   &kp RCTL    &kp RALT    &kp RGUI    &trans
                    &trans  &trans  &trans      &trans  &trans  &trans
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// east side tap-only
// 
// |     |     |     |     |     |     ||     |  7  |  8  |  9  |     |     |
// |     |     |     |     |     |     ||     |  4  |  5  |  6  |     |     |
// |     |     |     |     |     |     ||  0  |  1  |  2  |  3  |     |     |
//                   |     |     |     ||     |     |     |
                        bindings = <
    &trans  &trans      &trans      &trans      &trans      &trans      &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
    &trans  &trans      &trans      &trans      &trans      &trans      &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
    &trans  &kp LGUI    &kp LALT    &kp LCTL    &kp LSHFT   &trans      &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                            &trans  &trans  &trans       &trans  &trans  &trans
                        >;
                };

//                 empty_layer {
// // -----------------------------------------------------------------------------------------
// // |     |     |     |     |     |     ||     |     |     |     |     |     |
// // |     |     |     |     |     |     ||     |     |     |     |     |     |
// // |     |     |     |     |     |     ||     |     |     |     |     |     |
// //                   |     |     |     ||     |     |     |
//                         bindings = <
//     &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
//     &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
//     &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
//                             &trans  &trans  &trans       &trans  &trans  &trans
//                         >;
//                 };
        };
};
