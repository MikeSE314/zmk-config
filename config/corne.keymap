#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        ad_fslh: adaptive_fslash {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_FSLASH";
            #binding-cells = <0>;
            defaults = <&kp FSLH>;
            bindings = <&kp U>, <&kp A>;
            antecedents = <A U>;
            max-delay-ms = <250>;
        };
        ad_backslash: adaptive_backslash {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_BACKSLASH";
            #binding-cells = <0>;
            defaults = <&kp BACKSLASH>;
            bindings = <&kp E>, <&kp O>;
            antecedents = <O E>;
            max-delay-ms = <250>;
        };
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 18 30 9 10 20 21 22 32 33 34 6 7 8 9 18 19 20 21 30 31 32 33 36 37 38 39 40 41 35 11 23 35 0 12 24>;
            hold-trigger-on-release;
        };

        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 11 23 35>;
            hold-trigger-on-release;
        };

        callum_mod: callum_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "CALLUM_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <20000>;
            quick-release;
            ignore-modifiers;
        };

        td_layers_1: td_layers_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYERS_1";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 4>, <&mo 6>;

            tapping-term-ms = <300>;
        };

        td_layers_2: td_layers_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYERS_2";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 5>, <&mo 6>;

            tapping-term-ms = <300>;
        };

        special_q: special_q {
            compatible = "zmk,behavior-hold-tap";
            label = "SPECIAL_Q";
            bindings = <&qu>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        linger: linger {
            compatible = "zmk,behavior-hold-tap";
            label = "LINGER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        combo_hd_q {
            bindings = <&special_q Q Q>;
            key-positions = <2 14>;
            layers = <0 8 7 9>;
            timeout-ms = <100>;
        };

        combo_hd_z {
            bindings = <&kp Z>;
            key-positions = <1 13>;
            layers = <0 8 7 9>;
            timeout-ms = <100>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <4 16>;
            timeout-ms = <100>;
        };

        combo_return {
            bindings = <&kp RETURN>;
            key-positions = <3 15>;
            timeout-ms = <100>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <17 4>;
            timeout-ms = <150>;
        };

        combo_return_right {
            bindings = <&kp RETURN>;
            key-positions = <8 20>;
            timeout-ms = <80>;
            require-prior-idle-ms = <150>;
        };

        combo_esc_right {
            bindings = <&kp ESC>;
            key-positions = <7 19>;
            timeout-ms = <100>;
        };
    };

    macros {
        adaptive_key: adaptive_key {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press &kp MACRO_PLACEHOLDER>,
                <&macro_param_2to1>,
                <&macro_tap &sl MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release &kp MACRO_PLACEHOLDER>;

            label = "ADAPTIVE_KEY";
        };

        adapt_p_v: adapt_p_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE &kp L &kp V>;
            label = "ADAPT_P_V";
        };

        qu: qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU";
        };

        com: com {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp M>;
            label = "COM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        hd_vb {
            bindings = <
&none  &kp X            &kp W            &adaptive_key M 7    &kp G              &kp J           &kp SEMI      &kp PERIOD              &ad_fslh              &ad_backslash     &linger GRAVE SQT  &none
&none  &kp S            &kp C            &kp N                &kp T              &kp K           &kp COMMA     &kp A                   &kp E                 &kp I             &kp H              &none
&none  &lhm LEFT_GUI B  &lhm LEFT_ALT P  &lhm LEFT_CONTROL L  &lhm LEFT_SHIFT D  &kp V           &kp MINUS     &rhm RIGHT_SHIFT U      &rhm RIGHT_CONTROL O  &rhm RIGHT_ALT Y  &rhm RIGHT_GUI F   &none
                                         &lt 1 TAB            &lt 2 SPACE        &td_layers_2    &td_layers_1  &lt 2 R                 &kp BACKSPACE
            >;
        };

        button {
            bindings = <
&none  &none                 &none                 &none                     &none                   &none        &none      &none                    &none                      &none                  &none                  &none
&none  &kp LC(Z)             &kp LC(X)             &kp LC(C)                 &kp LC(V)               &kp LC(A)    &kp LC(A)  &kp LC(V)                &kp LC(C)                  &kp LC(X)              &kp LC(Z)              &none
&none  &callum_mod LEFT_GUI  &callum_mod LEFT_ALT  &callum_mod LEFT_CONTROL  &callum_mod LEFT_SHIFT  &none        &none      &callum_mod RIGHT_SHIFT  &callum_mod RIGHT_CONTROL  &callum_mod RIGHT_ALT  &callum_mod RIGHT_GUI  &none
                                                   &trans                    &trans                  &trans       &trans     &trans                   &trans
            >;
        };

        num_sym {
            bindings = <
&none  &kp N1        &kp N2         &kp N3            &kp N4          &kp N5                                &kp N6                                      &kp N7                     &kp N8                       &kp N9                   &kp N0                   &none
&none  &kp GRAVE     &kp SEMICOLON  &kp MINUS         &kp EQUAL       &linger RIGHT_BRACKET LEFT_BRACKET    &linger RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp N4                     &kp N5                       &kp N6                   &kp PERIOD               &none
&none  &kp LEFT_GUI  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none                                 &kp SLASH                                   &rhm RIGHT_SHIFT NUMBER_1  &rhm RIGHT_CONTROL NUMBER_2  &rhm RIGHT_ALT NUMBER_3  &rhm RIGHT_GUI NUMBER_0  &none
                                    &trans            &trans          &trans                                &trans                                      &trans                     &trans
            >;
        };

        nav {
            bindings = <
&none  &none         &kp HOME      &kp UP            &kp END         &kp PG_UP    &kp HOME  &kp PG_DN        &kp PG_UP          &kp END        &kp ESC        &none
&none  &none         &kp LEFT      &kp DOWN          &kp RIGHT       &kp PG_DN    &kp LEFT  &kp DOWN         &kp UP             &kp RIGHT      &kp BSPC       &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none        &none     &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI  &none
                                   &trans            &trans          &trans       &trans    &trans           &trans
            >;
        };

        media {
            bindings = <
&none  &none             &none       &kp C_VOLUME_UP    &none       &none     &none       &kp C_BRI_DN       &kp C_BRI_UP     &none       &none             &none
&none  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_NEXT  &none     &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &none
&none  &none             &none       &none              &none       &none     &none       &none              &none            &none       &none             &none
                                     &trans             &trans      &trans    &trans      &trans             &trans
            >;
        };

        function {
            bindings = <
&none  &none         &none         &none             &none           &none     &none            &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &none         &none         &none             &none           &none     &caps_word       &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none     &kp PRINTSCREEN  &kp F1  &kp F2  &kp F3  &kp F12  &none
                                   &trans            &trans          &trans    &trans           &trans  &trans
            >;
        };

        settings {
            bindings = <
&none  &bt BT_CLR    &none         &none         &out OUT_TOG  &bootloader     &bootloader  &none   &none   &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none        &none   &none   &none  &none  &none
&none  &kp A         &kp W         &kp M         &kp X         &kp X           &none        &none   &none   &none  &none  &none
                                   &trans        &trans        &trans          &trans       &trans  &trans
            >;
        };

        hd_vb_adapt_m {
            bindings = <
&trans  &kp B   &kp P   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        hd_vb_adapt_a {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp U   &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        hd_vb_adapt_period {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &com    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
