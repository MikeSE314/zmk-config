#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        ad_fslh: adaptive_fslash {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_FSLASH";
            #binding-cells = <0>;
            defaults = <&ht_at_excl 0 SLASH>;
            bindings = <&kp U>, <&kp A>;

            antecedents = <A U>;
            max-delay-ms = <1000>;
        };

        ad_backslash: adaptive_backslash {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_BACKSLASH";
            #binding-cells = <0>;
            defaults = <&kp BACKSLASH>;
            bindings = <&kp E>, <&kp O>;

            antecedents = <O E>;
            max-delay-ms = <1000>;
        };

        ad_m: adaptive_m {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_M";
            #binding-cells = <0>;
            defaults = <&kp M>;
            bindings = <&kp L>, <&kp L>;

            antecedents = <G P>;
            max-delay-ms = <1000>;
        };

        ad_x: adaptive_x {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_X";
            #binding-cells = <0>;
            defaults = <&kp X>;
            bindings = <&kp B>;
            antecedents = <M>;
            max-delay-ms = <1000>;
        };

        ad_w: adaptive_w {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_W";
            #binding-cells = <0>;
            defaults = <&kp W>;
            bindings = <&kp P>, <&kp P>;

            antecedents = <M X>;
            max-delay-ms = <1000>;
        };

        ad_semi: adaptive_semi {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_SEMI";
            #binding-cells = <0>;
            defaults = <&kp SEMI>;
            bindings = <&com>;
            antecedents = <PERIOD>;
            max-delay-ms = <1000>;
        };

        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 18 30 9 10 20 21 22 32 33 34 6 7 8 9 18 19 20 21 30 31 32 33 36 37 38 39 40 41 35 11 23 35 0 12 24>;
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
        };

        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 11 23 35>;
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
        };

        lhm_s: lhm_s {
            compatible = "zmk,behavior-hold-tap";
            label = "LHM_S";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 18 30 9 10 20 21 22 32 33 34 6 7 8 9 18 19 20 21 30 31 32 33 36 37 38 39 40 41 35 11 23 35 0 12 24>;
            hold-trigger-on-release;
        };

        rhm_s: rhm_s {
            compatible = "zmk,behavior-hold-tap";
            label = "RHM_S";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 11 23 35>;
            hold-trigger-on-release;
        };

        callum_mod: callum_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "CALLUM_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <20000>;
            quick-release;
            ignore-modifiers;
        };

        td_layers_1: td_layers_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYERS_1";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 4>, <&mo 6>;

            tapping-term-ms = <300>;
        };

        td_layers_2: td_layers_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYERS_2";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 5>, <&mo 6>;

            tapping-term-ms = <300>;
        };

        special_q: special_q {
            compatible = "zmk,behavior-hold-tap";
            label = "SPECIAL_Q";
            bindings = <&qu>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        linger: linger {
            compatible = "zmk,behavior-hold-tap";
            label = "LINGER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        ht_at_excl: ht_at_excl {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_AT_EXCL";
            bindings = <&mm_at_excl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };

        mm_at_excl: mm_at_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_AT_EXCL";
            bindings = <&kp AT>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RALT)>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
        };

        mm_sym_1: mm_sym_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_1";
            bindings = <&kp HASH>, <&kp DOLLAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_sym_2: mm_sym_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_2";
            bindings = <&kp PERCENT>, <&kp AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_sym_3: mm_sym_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_3";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_sym_4: mm_sym_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_4";
            bindings = <&kp LESS_THAN>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_sym_5: mm_sym_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_5";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_sym_6: mm_sym_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_6";
            bindings = <&kp GREATER_THAN>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_mm_sym_1: ht_mm_sym_1 {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_MM_SYM_1";
            bindings = <&mm_sym_4>, <&mm_sym_3>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
        };

        ht_mm_sym_2: ht_mm_sym_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_MM_SYM_2";
            bindings = <&mm_sym_6>, <&mm_sym_5>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
        };

        mm_sym_7: mm_sym_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_7";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_sym_8: mm_sym_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_8";
            bindings = <&kp CARET>, <&kp STAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_sym_9: mm_sym_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SYM_9";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        combo_hd_q_l {
            bindings = <&kp Q>;
            key-positions = <2 3>;
            layers = <0 8 7 9>;
            timeout-ms = <100>;
        };

        combo_q_r {
            bindings = <&kp Q>;
            key-positions = <9 8>;
            timeout-ms = <100>;
            layers = <0 8 7 9>;
        };

        combo_z_l {
            bindings = <&kp Z>;
            key-positions = <13 2>;
            layers = <0 8 7 9>;
            timeout-ms = <100>;
        };

        combo_z_r {
            bindings = <&kp Z>;
            key-positions = <22 9>;
            timeout-ms = <100>;
            layers = <0 8 7 9>;
        };

        combo_esc_l {
            bindings = <&kp ESC>;
            key-positions = <4 16>;
            timeout-ms = <100>;
        };

        combo_esc_r {
            bindings = <&kp ESC>;
            key-positions = <19 7>;
            timeout-ms = <100>;
        };

        combo_return_l {
            bindings = <&kp RETURN>;
            key-positions = <15 14 16>;
            timeout-ms = <100>;
        };

        combo_return_r {
            bindings = <&kp RETURN>;
            key-positions = <20 19 21>;
            timeout-ms = <100>;
            require-prior-idle-ms = <150>;
        };

        combo_delete_l {
            bindings = <&kp DELETE>;
            key-positions = <17 4>;
            timeout-ms = <150>;
        };

        combo_delete_r {
            bindings = <&kp DELETE>;
            key-positions = <18 7>;
            timeout-ms = <150>;
        };
    };

    macros {
        qu: qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU";
        };

        com: com {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp M>;
            label = "COM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        hd_vb {
            bindings = <
&none  &kp X            &kp W            &kp G                &kp M                &kp J           &mm_sym_8     &mm_sym_9             &ad_fslh              &ad_backslash     &linger GRAVE SQT  &none
&none  &kp S            &kp N            &kp T                &kp H                &kp K           &mm_sym_7     &kp A                 &kp E                 &kp I             &kp C              &none
&none  &lhm LEFT_GUI F  &lhm LEFT_ALT P  &lhm LEFT_CONTROL D  &lhm_s LEFT_SHIFT L  &kp V           &kp MINUS     &rhm_s RIGHT_SHIFT U  &rhm RIGHT_CONTROL O  &rhm RIGHT_ALT Y  &rhm RIGHT_GUI B   &none
                                         &lt 1 TAB            &lt 2 SPACE          &td_layers_2    &td_layers_1  &lt 2 R               &kp BACKSPACE
            >;
        };

        button {
            bindings = <
&none  &none                 &none                 &none                     &none                   &none        &none      &none                    &none                      &none                  &none                  &none
&none  &kp LC(Z)             &kp LC(X)             &kp LC(C)                 &kp LC(V)               &kp LC(A)    &kp LC(A)  &kp LC(V)                &kp LC(C)                  &kp LC(X)              &kp LC(Z)              &none
&none  &callum_mod LEFT_GUI  &callum_mod LEFT_ALT  &callum_mod LEFT_CONTROL  &callum_mod LEFT_SHIFT  &none        &none      &callum_mod RIGHT_SHIFT  &callum_mod RIGHT_CONTROL  &callum_mod RIGHT_ALT  &callum_mod RIGHT_GUI  &none
                                                   &trans                    &trans                  &trans       &trans     &trans                   &trans
            >;
        };

        num_sym {
            bindings = <
&none  &kp N1        &kp N2        &kp N3            &kp N4          &kp N5              &kp N6            &kp N7               &kp N8                 &kp N9             &kp N0             &none
&none  &kp GRAVE     &mm_sym_1     &mm_sym_2         &kp EQUAL       &ht_mm_sym_1 0 0    &ht_mm_sym_2 0 0  &kp N4               &kp N5                 &kp N6             &kp PERIOD         &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none               &kp SLASH         &rhm RIGHT_SHIFT N1  &rhm RIGHT_CONTROL N2  &rhm RIGHT_ALT N3  &rhm RIGHT_GUI N0  &none
                                   &trans            &trans          &trans              &trans            &trans               &trans
            >;
        };

        nav {
            bindings = <
&none  &none         &kp HOME      &kp UP            &kp END         &kp PG_UP    &none   &kp HOME         &kp PG_DN          &kp PG_UP      &kp END        &none
&none  &none         &kp LEFT      &kp DOWN          &kp RIGHT       &kp PG_DN    &none   &kp LEFT         &kp DOWN           &kp UP         &kp RIGHT      &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none        &none   &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI  &none
                                   &trans            &trans          &trans       &trans  &trans           &trans
            >;
        };

        media {
            bindings = <
&none  &none             &none       &kp C_VOLUME_UP    &none       &none     &none       &kp C_BRI_DN       &kp C_BRI_UP     &none       &none             &none
&none  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_NEXT  &none     &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &none
&none  &none             &none       &none              &none       &none     &none       &none              &none            &none       &none             &none
                                     &trans             &trans      &trans    &trans      &trans             &trans
            >;
        };

        function {
            bindings = <
&none  &none         &none         &none             &none           &none     &none            &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &none         &none         &none             &none           &none     &caps_word       &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none     &kp PRINTSCREEN  &kp F1  &kp F2  &kp F3  &kp F12  &none
                                   &trans            &trans          &trans    &trans           &trans  &trans
            >;
        };

        settings {
            bindings = <
&none  &bt BT_CLR    &none         &none         &out OUT_TOG  &bootloader     &bootloader  &none   &none   &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none        &none   &none   &none  &none  &none
&none  &kp A         &kp W         &kp M         &kp I         &kp X           &none        &none   &none   &none  &none  &none
                                   &trans        &trans        &trans          &trans       &trans  &trans
            >;
        };
    };
};
