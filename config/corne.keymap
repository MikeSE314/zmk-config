/*
 * From here on out, I will be maintaining this keymap through
 * https://nickcoutsos.github.io/keymap-editor/
 * Copy and paste this into their "Clipboard" source, make the changes,
 * then paste the result here.
 *
 * The result of this should be fewer bugs, easier-to-visualize layers
 * through Nick's app, and not-too-much-harder-to-understand code here.
 *
 * Also, his code is very kind and leaves comments just as they were,
 * and spaces out the layer mappings quite well.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { flavor = "hold-preferred"; };

/ {
    behaviors {
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 18 30 9 10 11 20 21 22 23 32 33 34 35 6 7 8 9 18 19 20 21 30 31 32 33 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        callum_mod: callum_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "CALLUM_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <20000>;
            quick-release;
            ignore-modifiers;
        };

        td_layers_1: td_layers_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYERS_1";
            #binding-cells = <0>;
            bindings = <&mo 4>, <&mo 3>, <&mo 8>;

            tapping-term-ms = <500>;
        };

        td_layers_2: td_layers_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LAYERS_2";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 4>, <&mo 7>;

            tapping-term-ms = <500>;
        };

        special_q: special_q {
            compatible = "zmk,behavior-hold-tap";
            label = "SPECIAL_Q";
            bindings = <&kp>, <&qu>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        linger: linger {
            compatible = "zmk,behavior-hold-tap";
            label = "LINGER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        combo_function {
            bindings = <&mo 8>;
            key-positions = <36 41>;
        };

        combo_settings {
            bindings = <&mo 6>;
            key-positions = <38 39>;
        };

        combo_media {
            bindings = <&mo 7>;
            key-positions = <37 40>;
        };

        combo_settings_2 {
            bindings = <&mo 6>;
            key-positions = <36 37>;
        };

        combo_hd_q {
            bindings = <&special_q Q Q>;
            key-positions = <31 33>;
            layers = <0>;
        };

        combo_hd_z {
            bindings = <&kp Z>;
            key-positions = <1 2>;
            layers = <0>;
        };
    };

    macros {
        adaptive_key: adaptive_key {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &sl MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "ADAPTIVE_KEY";
        };

        adapt_p_v: adapt_p_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE &kp L &kp V>;
            label = "ADAPT_P_V";
        };

        qu: qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        hd_gold {
            bindings = <
&kp ESCAPE  &kp J  &adaptive_key G 10  &adaptive_key M 12  &adaptive_key P 9  &kp V           &kp SEMI      &kp DOT             &kp FSLH       &kp BACKSLASH  &kp SQT  &kp GRAVE
&kp TAB     &kp R  &kp S               &kp N               &kp D              &kp W           &kp COMMA     &adaptive_key A 11  &kp E          &kp I          &kp H    &kp RETURN
&kp DELETE  &kp X  &kp F               &kp L               &lhm LEFT_SHIFT C  &kp B           &kp MINUS     &rhm RIGHT_SHIFT U  &kp O          &kp Y          &kp K    &trans
                                       &mo 5               &kp SPACE          &td_layers_2    &td_layers_1  &kp T               &kp BACKSPACE
            >;
        };

        colemak {
            bindings = <
&trans  &kp Q            &kp W            &kp F                &kp P              &kp G     &kp J   &kp L               &kp U                     &kp Y               &kp SINGLE_QUOTE     &trans
&trans  &kp A            &kp R            &kp S                &kp T              &kp D     &kp H   &kp N               &kp E                     &kp I               &kp O                &trans
&trans  &lhm LEFT_GUI Z  &lhm LEFT_ALT X  &lhm LEFT_CONTROL C  &lhm LEFT_SHIFT V  &kp B     &kp K   &rhm RIGHT_SHIFT M  &rhm RIGHT_CONTROL COMMA  &rhm RIGHT_ALT DOT  &rhm RIGHT_GUI FSLH  &trans
                                          &trans               &trans             &trans    &trans  &trans              &trans
            >;
        };

        qwerty {
            bindings = <
&trans  &kp Q            &kp W            &kp E                &kp R              &kp T     &kp Y   &kp U               &kp I                     &kp O                  &kp P                 &trans
&trans  &kp A            &kp S            &kp D                &kp F              &kp G     &kp H   &kp J               &kp K                     &kp L                  &kp SINGLE_QUOTE      &trans
&trans  &lhm LEFT_GUI Z  &lhm LEFT_ALT X  &lhm LEFT_CONTROL C  &lhm LEFT_SHIFT V  &kp B     &kp N   &rhm RIGHT_SHIFT M  &rhm RIGHT_CONTROL COMMA  &rhm RIGHT_ALT PERIOD  &rhm RIGHT_GUI SLASH  &trans
                                          &trans               &trans             &trans    &trans  &trans              &trans
            >;
        };

        num_sym {
            bindings = <
&trans  &kp N1        &kp N2         &kp N3            &kp N4          &kp N5                                &kp N6                                      &kp N7        &kp N8        &kp N9        &kp N0      &trans
&trans  &kp GRAVE     &kp SEMICOLON  &kp MINUS         &kp EQUAL       &linger RIGHT_BRACKET LEFT_BRACKET    &linger RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp N4        &kp N5        &kp N6        &kp PERIOD  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT   &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp BACKSLASH                         &kp SLASH                                   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0      &trans
                                     &trans            &trans          &trans                                &trans                                      &trans        &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans        &kp HOME      &kp UP            &kp END         &kp PG_UP    &kp HOME         &kp PG_DN        &kp PG_UP          &kp END        &kp ESC        &trans
&trans  &trans        &kp LEFT      &kp DOWN          &kp RIGHT       &kp PG_DN    &kp LEFT         &kp DOWN         &kp UP             &kp RIGHT      &kp BSPC       &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans       &kp PRINTSCREEN  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
                                    &trans            &trans          &trans       &trans           &trans           &trans
            >;
        };

        button {
            bindings = <
&trans  &trans                &trans                &trans                    &trans                  &trans    &trans  &trans                   &trans                     &trans                 &trans                 &trans
&trans  &kp Z                 &kp X                 &kp C                     &kp V                   &kp A     &kp A   &kp V                    &kp C                      &kp X                  &kp Z                  &trans
&trans  &callum_mod LEFT_GUI  &callum_mod LEFT_ALT  &callum_mod LEFT_CONTROL  &callum_mod LEFT_SHIFT  &trans    &trans  &callum_mod RIGHT_SHIFT  &callum_mod RIGHT_CONTROL  &callum_mod RIGHT_ALT  &callum_mod RIGHT_GUI  &trans
                                                    &trans                    &trans                  &trans    &trans  &trans                   &trans
            >;
        };

        settings {
            bindings = <
&trans  &bt BT_CLR    &trans        &trans        &out OUT_TOG  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &to 1   &to 2   &to 0   &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans            &trans      &kp C_VOLUME_UP    &trans      &trans    &trans      &kp C_BRI_DN       &kp C_BRI_UP     &trans      &trans            &trans
&trans  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_NEXT  &trans    &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &trans
&trans  &trans            &trans      &trans             &trans      &trans    &trans      &trans             &trans           &trans      &trans            &trans
                                      &trans             &trans      &trans    &trans      &trans             &trans
            >;
        };

        function {
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans    &trans      &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans        &trans        &trans            &trans          &trans    &caps_word  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans      &kp F1  &kp F2  &kp F3  &kp F12  &trans
                                    &trans            &trans          &trans    &trans      &trans  &trans
            >;
        };

        hd_g_adapt_p {
            bindings = <
&trans  &trans  &trans  &kp L   &trans  &adapt_p_v    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };

        hd_g_adapt_g {
            bindings = <
&trans  &trans  &trans  &kp L   &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        hd_g_adapt_a {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp U   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        hd_g_adapt_m {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp B     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
